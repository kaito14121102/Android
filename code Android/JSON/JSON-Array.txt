VD:
-["Android","IOS",""PHP]

-[{"ten" : "Minh","diachi : "Hà Nội"} , {"gioitinh" : true}]

-{"danhsach": [
  { "khoahoc" : "Lập trình Android" },
  { "khoahoc" : "Lập trình iOS" },
  { "khoahoc" : "Lập trình PHP" },
  { "khoahoc" : "Lập trình NodeJS" },
  { "khoahoc" : "Lập trình Unity" }
]}

private class ReadJSON extends AsyncTask<String,Void,String>{

        @Override
        protected String doInBackground(String... params) {
            StringBuilder content = new StringBuilder();
            try {
                URL url = new URL(params[0]);
                InputStreamReader inputStreamReader = new InputStreamReader(url.openConnection().getInputStream());
                BufferedReader bufferedReader = new BufferedReader(inputStreamReader);
                String line ="";
                while ((line=bufferedReader.readLine())!=null){
                    content.append(line);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            } catch (IOException e) {
                e.printStackTrace();
            }

            return content.toString();
        }

        @Override
        protected void onPostExecute(String s) {
            super.onPostExecute(s);
            try {
                JSONObject object = new JSONObject(s);
                JSONArray array = object.getJSONArray("danhsach");

                for(int i =0;i<array.length();i++){
                    JSONObject objectKH = array.getJSONObject(i);
                    String ten =objectKH.getString("khoahoc");
                    Toast.makeText(JSON_Array.this, ten, Toast.LENGTH_SHORT).show();
                }
            } catch (JSONException e) {
                e.printStackTrace();
            }
            Toast.makeText(JSON_Array.this, s, Toast.LENGTH_SHORT).show();
        }
    }
}
