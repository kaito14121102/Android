MediaPlayer mediaPlayer = MediaPlayer.create(MainActivity.this,R.raw.am_tham_ben_em);
              	mediaPlayer.start();

 if(mediaPlayer.isPlaying()==true){ //Nếu đang phát thì pause và đổi hình pause thành play
                    mediaPlayer.pause();
                    imgPlay.setImageResource(R.drawable.play);
                }else {
                    mediaPlayer.start();
                    imgPlay.setImageResource(R.drawable.pause);

                }

Tạo một mảng bài hát:
	        mediaPlayer = MediaPlayer.create(MainActivity.this,arraySong.get(position).getFile());





SeekBar bắt điều kiện:
seekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
            @Override
            public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
                //khi kéo giữ seekbar thì giá trị cập nhật liên tục
            }

            @Override
            public void onStartTrackingTouch(SeekBar seekBar) {
                //Chỉ khi chọn vị trí thì nó mới lấy khoảnh khác đó để phát nhạc
            }

            @Override
            public void onStopTrackingTouch(SeekBar seekBar) {
                //khi kéo giữ seekbar và chỉ khi thả tay ra thì nó mới cập nhật
                mediaPlayer.seekTo(seekBar.getProgress());//Nhạy đến một đoạn nào đó của bài hát
            }
        });
    }



Lấy tổng thời gian và thời gian hiện chạy của bài hát để add vào SeekBar:

private void SetTimeTotal(){
        SimpleDateFormat dinhDangGio = new SimpleDateFormat("mm:ss");
        txtFullTime.setText(dinhDangGio.format(mediaPlayer.getDuration()));//trả lại thời gian
        //Gán max của seekbar = media.getDuration;
        seekBar.setMax(mediaPlayer.getDuration());
    }
    private void UpdateTimeSong(){
        final Handler handler = new Handler();
        handler.postDelayed(new Runnable() {
            @Override
            public void run() {
                SimpleDateFormat simpleDateFormat = new SimpleDateFormat("mm:ss");
                txtTime.setText(simpleDateFormat.format(mediaPlayer.getCurrentPosition()));//lấy thời gian
                                                                                    // hiện tại đang phát
                //update progress seekbar
                seekBar.setProgress(mediaPlayer.getCurrentPosition());
                //kiểm tra thời gian bài hát -> nếu kết thúc ->next
                mediaPlayer.setOnCompletionListener(new MediaPlayer.OnCompletionListener() {
                    @Override
                    public void onCompletion(MediaPlayer mp) {
                        position++;
                        if(position>arraySong.size()-1){
                            position=0;
                        }
                        if(mediaPlayer.isPlaying()){
                            mediaPlayer.stop();
                            mediaPlayer.release();
                        }else {
                            imgPlay.setImageResource(R.drawable.pause);
                        }
                        khoiTaoMedia();
                        mediaPlayer.start();
                        setImage(arraySong.get(position).getHinh());

                    }
                });
                handler.postDelayed(this,500);
            }
        },100);
    }
		